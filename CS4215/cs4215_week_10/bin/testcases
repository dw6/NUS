# Intial test for stack, without the lookup.

let stack = [ Push: fun this x -> this.Content := x :: this.Content end, 
	     	  Pop: fun this ->  
						let top = this.Content.First 
						in 
							this.Content := this.Content.Second; 
							top 
						end 
					end, 
			  Makeempty: 
				fun this -> 
					this.Content := []; 
					this 
				end 
       		]
 in   
 	let mystack = (new stack) in mystack := (stack.Makeempty mystack); 
 											(stack.Push mystack 2); 
 											(stack.Push mystack 3); 
 											(stack.Push mystack 4) 
 	end
 end
 
 # Stack example with lookup
 
 let stack = [ Push: fun this x -> this.Content := x :: this.Content end, 
	     	   Pop: fun this ->  
						let top = this.Content.First 
						in 
							this.Content := this.Content.Second; 
							top 
						end 
					end, 
			   Makeempty: 
				fun this ->
					this.Parent := stack 
					this.Content := []; 
					this 
				end,
			   Pushtwice:
			   	fun this x ->
			   		((lookup this Push) this x);
			   		((lookup this Push) this x)
			   	end 
       		]
 in   
 	
 	
 	let mystack = (new stack) in 
 		mystack := (stack.Makeempty mystack); 
 				   (stack.Pushtwice mystack)
 	end
 end